--- a/chrome/browser/search/search.cc
+++ b/chrome/browser/search/search.cc
@@ -217,17 +217,7 @@ struct NewTabURLDetails {
       return NewTabURLDetails(local_url, NEW_TAB_URL_VALID);
 
     NewTabURLState state = IsValidNewTabURL(profile, search_provider_url);
-    switch (state) {
-      case NEW_TAB_URL_VALID:
-        // We can use the search provider's page.
-        return NewTabURLDetails(search_provider_url, state);
-      case NEW_TAB_URL_INCOGNITO:
-        // Incognito has its own New Tab.
-        return NewTabURLDetails(GURL(), state);
-      default:
-        // Use the local New Tab otherwise.
-        return NewTabURLDetails(local_url, state);
-    }
+    return NewTabURLDetails(local_url, state);
   }
 
   GURL url;
--- a/components/ntp_snippets/features.cc
+++ b/components/ntp_snippets/features.cc
@@ -38,16 +38,16 @@ const base::Feature* const kAllFeatures[] = {
     nullptr};
 
 const base::Feature kArticleSuggestionsFeature{
-    "NTPArticleSuggestions", base::FEATURE_ENABLED_BY_DEFAULT};
+    "NTPArticleSuggestions", base::FEATURE_DISABLED_BY_DEFAULT};
 
 const base::Feature kBookmarkSuggestionsFeature{
-    "NTPBookmarkSuggestions", base::FEATURE_ENABLED_BY_DEFAULT};
+    "NTPBookmarkSuggestions", base::FEATURE_DISABLED_BY_DEFAULT};
 
 const base::Feature kRecentOfflineTabSuggestionsFeature{
     "NTPOfflinePageSuggestions", base::FEATURE_DISABLED_BY_DEFAULT};
 
 const base::Feature kIncreasedVisibility{"NTPSnippetsIncreasedVisibility",
-                                         base::FEATURE_ENABLED_BY_DEFAULT};
+                                         base::FEATURE_DISABLED_BY_DEFAULT};
 
 const base::Feature kPhysicalWebPageSuggestionsFeature{
     "NTPPhysicalWebPageSuggestions", base::FEATURE_DISABLED_BY_DEFAULT};
