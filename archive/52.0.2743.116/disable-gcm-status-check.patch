--- ./components/gcm_driver/gcm_channel_status_request.cc
+++ ./components/gcm_driver/gcm_channel_status_request.cc.new
@@ -19,8 +19,10 @@ namespace gcm {
 
 namespace {
 
+#if 0
 const char kRequestContentType[] = "application/octet-stream";
 const char kGCMChannelTag[] = "gcm_channel";
+#endif
 const int kDefaultPollIntervalSeconds = 60 * 60;  // 60 minutes.
 const int kMinPollIntervalSeconds = 30 * 60;  // 30 minutes.
 
@@ -53,6 +55,7 @@ int GCMChannelStatusRequest::min_poll_interval_seconds() {
 }
 
 void GCMChannelStatusRequest::Start() {
+#if 0
   DCHECK(!url_fetcher_.get());
 
   GURL request_url(channel_status_request_url_);
@@ -72,6 +75,9 @@ void GCMChannelStatusRequest::Start() {
   url_fetcher_->SetLoadFlags(net::LOAD_DO_NOT_SEND_COOKIES |
                              net::LOAD_DO_NOT_SAVE_COOKIES);
   url_fetcher_->Start();
+#endif
+  // Simulate an empty response and disable GCM.
+  callback_.Run(false, false, 0);
 }
 
 void GCMChannelStatusRequest::OnURLFetchComplete(

