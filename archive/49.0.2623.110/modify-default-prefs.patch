--- ./chrome/browser/chrome_content_browser_client.cc
+++ ./chrome/browser/chrome_content_browser_client.cc.new
@@ -733,7 +733,7 @@
 void ChromeContentBrowserClient::RegisterProfilePrefs(
     user_prefs::PrefRegistrySyncable* registry) {
   registry->RegisterBooleanPref(prefs::kDisable3DAPIs, false);
-  registry->RegisterBooleanPref(prefs::kEnableHyperlinkAuditing, true);
+  registry->RegisterBooleanPref(prefs::kEnableHyperlinkAuditing, false);
   registry->RegisterListPref(prefs::kEnableDeprecatedWebPlatformFeatures);
 }
 


--- ./chrome/browser/ui/browser_ui_prefs.cc
+++ ./chrome/browser/ui/browser_ui_prefs.cc.new
@@ -83,11 +83,11 @@
   registry->RegisterBooleanPref(prefs::kWebAppCreateInQuickLaunchBar, true);
   registry->RegisterBooleanPref(
       prefs::kEnableTranslate,
-      true,
+      false,
       user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
   registry->RegisterStringPref(prefs::kCloudPrintEmail, std::string());
   registry->RegisterBooleanPref(prefs::kCloudPrintProxyEnabled, true);
-  registry->RegisterBooleanPref(prefs::kCloudPrintSubmitEnabled, true);
+  registry->RegisterBooleanPref(prefs::kCloudPrintSubmitEnabled, false);
   registry->RegisterBooleanPref(prefs::kDevToolsDisabled, false);
   registry->RegisterDictionaryPref(prefs::kBrowserWindowPlacement);
   registry->RegisterDictionaryPref(prefs::kBrowserWindowPlacementPopup);



--- ./chrome/browser/net/prediction_options.cc
+++ ./chrome/browser/net/prediction_options.cc.new
@@ -26,7 +26,7 @@
     case NETWORK_PREDICTION_NEVER:
       return NetworkPredictionStatus::DISABLED_ALWAYS;
     default:
-      DCHECK_EQ(NETWORK_PREDICTION_WIFI_ONLY, network_prediction_options);
+      //DCHECK_EQ(NETWORK_PREDICTION_WIFI_ONLY, network_prediction_options);
       if (net::NetworkChangeNotifier::IsConnectionCellular(
                  net::NetworkChangeNotifier::GetConnectionType())) {
         return NetworkPredictionStatus::DISABLED_DUE_TO_NETWORK;



--- ./chrome/browser/net/prediction_options.h
+++ ./chrome/browser/net/prediction_options.h.new
@@ -21,7 +21,7 @@ enum NetworkPredictionOptions {
   NETWORK_PREDICTION_ALWAYS,
   NETWORK_PREDICTION_WIFI_ONLY,
   NETWORK_PREDICTION_NEVER,
-  NETWORK_PREDICTION_DEFAULT = NETWORK_PREDICTION_WIFI_ONLY,
+  NETWORK_PREDICTION_DEFAULT = NETWORK_PREDICTION_NEVER,
 };
 
 enum class NetworkPredictionStatus {


--- ./chrome/browser/background/background_mode_manager.cc
+++ ./chrome/browser/background/background_mode_manager.cc.new
@@ -356,7 +356,7 @@ void BackgroundModeManager::RegisterPref
   registry->RegisterBooleanPref(prefs::kChromeCreatedLoginItem, false);
   registry->RegisterBooleanPref(prefs::kMigratedLoginItemPref, false);
 #endif
-  registry->RegisterBooleanPref(prefs::kBackgroundModeEnabled, true);
+  registry->RegisterBooleanPref(prefs::kBackgroundModeEnabled, false);
 }
 
 void BackgroundModeManager::RegisterProfile(Profile* profile) {


--- ./components/content_settings/core/browser/cookie_settings.cc
+++ ./components/content_settings/core/browser/cookie_settings.cc.new
@@ -82,7 +82,7 @@
 void CookieSettings::RegisterProfilePrefs(
     user_prefs::PrefRegistrySyncable* registry) {
   registry->RegisterBooleanPref(
-      prefs::kBlockThirdPartyCookies, false,
+      prefs::kBlockThirdPartyCookies, true,
       user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
 }
 


--- ./chrome/browser/ui/navigation_correction_tab_observer.cc
+++ ./chrome/browser/ui/navigation_correction_tab_observer.cc.new
@@ -56,7 +56,7 @@ NavigationCorrectionTabObserver::~Naviga
 void NavigationCorrectionTabObserver::RegisterProfilePrefs(
     user_prefs::PrefRegistrySyncable* prefs) {
   prefs->RegisterBooleanPref(prefs::kAlternateErrorPagesEnabled,
-                             true,
+                             false,
                              user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
 }


--- ./components/autofill/core/browser/autofill_manager.cc
+++ ./components/autofill/core/browser/autofill_manager.cc.new
@@ -140,7 +140,7 @@ void AutofillManager::RegisterProfilePre
     user_prefs::PrefRegistrySyncable* registry) {
   registry->RegisterBooleanPref(
       prefs::kAutofillEnabled,
-      true,
+      false,
       user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
   registry->RegisterBooleanPref(prefs::kAutofillWalletSyncExperimentEnabled,
                                 false);


--- ./chrome/browser/resources/options/reset_profile_settings_overlay.html
+++ ./chrome/browser/resources/options/reset_profile_settings_overlay.html.new
@@ -26,7 +26,7 @@
   <div id="feedback-bar"
       class="gray-bottom-bar checkbox controlled-setting-with-label">
     <label>
-      <input id="send-settings" type="checkbox" checked>
+      <input id="send-settings" type="checkbox">
       <span>
         <span i18n-content="resetProfileSettingsFeedback"></span>
         <span id="expand-feedback"></span>


--- ./chrome/browser/io_thread.cc
+++ ./chrome/browser/io_thread.cc.new
@@ -1043,7 +1043,7 @@ void IOThread::RegisterPrefs(PrefRegistr
                                std::string());
   registry->RegisterBooleanPref(prefs::kEnableReferrers, true);
   data_reduction_proxy::RegisterPrefs(registry);
-  registry->RegisterBooleanPref(prefs::kBuiltInDnsClientEnabled, true);
+  registry->RegisterBooleanPref(prefs::kBuiltInDnsClientEnabled, false);
   registry->RegisterBooleanPref(prefs::kQuickCheckEnabled, true);
 }
 

--- ./extensions/common/extension.cc
+++ ./extensions/common/extension.cc.new
@@ -357,7 +357,7 @@ bool Extension::ShouldNotBeVisible() con
   if (extensions::Manifest::IsComponentLocation(location()) &&
       !base::CommandLine::ForCurrentProcess()->HasSwitch(
           switches::kShowComponentExtensionOptions)) {
-    return true;
+    return false;
   }
 
   // Always show unpacked extensions and apps.
@@ -366,7 +366,7 @@ bool Extension::ShouldNotBeVisible() con
 
   // Don't show apps that aren't visible in either launcher or ntp.
   if (is_app() && !ShouldDisplayInAppLauncher() && !ShouldDisplayInNewTabPage())
-    return true;
+    return false;
 
   return false;
 }
 

--- ./chrome/browser/signin/signin_promo.cc
+++ ./chrome/browser/signin/signin_promo.cc.new
@@ -353,8 +354,8 @@ void ForceWebBasedSigninFlowForTesting(b
 void RegisterProfilePrefs(
     user_prefs::PrefRegistrySyncable* registry) {
   registry->RegisterIntegerPref(prefs::kSignInPromoStartupCount, 0);
-  registry->RegisterBooleanPref(prefs::kSignInPromoUserSkipped, false);
-  registry->RegisterBooleanPref(prefs::kSignInPromoShowOnFirstRunAllowed, true);
+  registry->RegisterBooleanPref(prefs::kSignInPromoUserSkipped, true);
+  registry->RegisterBooleanPref(prefs::kSignInPromoShowOnFirstRunAllowed, false);
   registry->RegisterBooleanPref(prefs::kSignInPromoShowNTPBubble, false);
 }
 


--- ./components/bookmarks/browser/bookmark_utils.cc
+++ ./components/bookmarks/browser/bookmark_utils.cc.new
@@ -430,12 +430,12 @@ void GetBookmarksMatchingProperties(Book
 void RegisterProfilePrefs(user_prefs::PrefRegistrySyncable* registry) {
   registry->RegisterBooleanPref(
       prefs::kShowBookmarkBar,
-      false,
+      true,
       user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
   registry->RegisterBooleanPref(prefs::kEditBookmarksEnabled, true);
   registry->RegisterBooleanPref(
       prefs::kShowAppsShortcutInBookmarkBar,
-      true,
+      false,
       user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
   registry->RegisterBooleanPref(
       prefs::kShowManagedBookmarksInBookmarkBar,


--- ./chrome/browser/profiles/profile.cc
+++ ./chrome/browser/profiles/profile.cc.new
@@ -77,7 +77,7 @@ const char Profile::kNoHostedDomainFound
 void Profile::RegisterProfilePrefs(user_prefs::PrefRegistrySyncable* registry) {
   registry->RegisterBooleanPref(
       prefs::kSearchSuggestEnabled,
-      true,
+      false,
       user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
 #if BUILDFLAG(ANDROID_JAVA_UI)
   registry->RegisterStringPref(
@@ -89,7 +89,7 @@ void Profile::RegisterProfilePrefs(user_
   registry->RegisterStringPref(prefs::kSessionExitType, std::string());
   registry->RegisterBooleanPref(
       prefs::kSafeBrowsingEnabled,
-      true,
+      false,
       user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
   registry->RegisterBooleanPref(prefs::kSafeBrowsingExtendedReportingEnabled,
                                 false);
@@ -105,7 +105,7 @@ void Profile::RegisterProfilePrefs(user_
   // This pref is intentionally outside the above #if. That flag corresponds
   // to the Notifier extension and does not gate the launcher page.
   // TODO(skare): Remove or rename ENABLE_GOOGLE_NOW: http://crbug.com/459827.
-  registry->RegisterBooleanPref(prefs::kGoogleNowLauncherEnabled, true);
+  registry->RegisterBooleanPref(prefs::kGoogleNowLauncherEnabled, false);
   registry->RegisterBooleanPref(prefs::kDisableExtensions, false);
 #if defined(ENABLE_EXTENSIONS)
   registry->RegisterBooleanPref(extensions::pref_names::kAlertsInitialized,



--- ./chrome/service/cloud_print/connector_settings.cc
+++ ./chrome/service/cloud_print/connector_settings.cc.new
@@ -60,7 +60,7 @@ void ConnectorSettings::InitFrom(Service
   DCHECK(server_url_.is_valid());
 
   connect_new_printers_ = prefs->GetBoolean(
-      prefs::kCloudPrintConnectNewPrinters, true);
+      prefs::kCloudPrintConnectNewPrinters, false);
 
   xmpp_ping_enabled_ = prefs->GetBoolean(
       prefs::kCloudPrintXmppPingEnabled, false);



--- ./chrome/browser/ui/webui/local_discovery/local_discovery_ui.cc
+++ ./chrome/browser/ui/webui/local_discovery/local_discovery_ui.cc.new
@@ -142,10 +142,6 @@ void LocalDiscoveryUI::RegisterProfilePr
     user_prefs::PrefRegistrySyncable* registry) {
   registry->RegisterBooleanPref(
       prefs::kLocalDiscoveryNotificationsEnabled,
-#if defined(OS_WIN)
       false,
-#else
-      true,
-#endif
       user_prefs::PrefRegistrySyncable::SYNCABLE_PREF);
 }
