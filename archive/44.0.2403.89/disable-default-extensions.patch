--- ./chrome/browser/extensions/external_component_loader.cc
+++ ./chrome/browser/extensions/external_component_loader.cc.new
@@ -37,67 +37,11 @@
 
 // static
 bool ExternalComponentLoader::IsModifiable(const Extension* extension) {
-  if (extension->location() == Manifest::EXTERNAL_COMPONENT) {
-    static const char* const kEnhancedExtensions[] = {
-        "D5736E4B5CF695CB93A2FB57E4FDC6E5AFAB6FE2",  // http://crbug.com/312900
-        "D57DE394F36DC1C3220E7604C575D29C51A6C495",  // http://crbug.com/319444
-        "3F65507A3B39259B38C8173C6FFA3D12DF64CCE9"   // http://crbug.com/371562
-    };
-    return SimpleFeature::IsIdInArray(
-        extension->id(), kEnhancedExtensions, arraysize(kEnhancedExtensions));
-  }
-  return false;
+
 }
 
 void ExternalComponentLoader::StartLoading() {
   prefs_.reset(new base::DictionaryValue());
-  std::string app_id = extension_misc::kInAppPaymentsSupportAppId;
-  prefs_->SetString(app_id + ".external_update_url",
-                    extension_urls::GetWebstoreUpdateUrl().spec());
-
-  if (HotwordServiceFactory::IsHotwordAllowed(profile_)) {
-    std::string hotword_id = extension_misc::kHotwordSharedModuleId;
-    prefs_->SetString(hotword_id + ".external_update_url",
-                      extension_urls::GetWebstoreUpdateUrl().spec());
-  }
-
-  {
-    std::string extension_id;
-    if (IsEnhancedBookmarksEnabled(&extension_id)) {
-      prefs_->SetString(extension_id + ".external_update_url",
-                        extension_urls::GetWebstoreUpdateUrl().spec());
-    }
-  }
-
-#if defined(OS_CHROMEOS)
-  {
-    base::CommandLine* const command_line =
-        base::CommandLine::ForCurrentProcess();
-    if (!command_line->HasSwitch(chromeos::switches::kDisableNewZIPUnpacker)) {
-      const std::string extension_id = extension_misc::kZIPUnpackerExtensionId;
-      prefs_->SetString(extension_id + ".external_update_url",
-                        extension_urls::GetWebstoreUpdateUrl().spec());
-    }
-  }
-#endif
-
-
-#if defined(ENABLE_MEDIA_ROUTER)
-  if (switches::MediaRouterEnabled()) {
-    std::string media_router_extension_id(
-        extension_misc::kMediaRouterStableExtensionId);
-    prefs_->SetString(media_router_extension_id + ".external_update_url",
-                      extension_urls::GetWebstoreUpdateUrl().spec());
-  }
-#endif  // defined(ENABLE_MEDIA_ROUTER)
-
-#if defined(ENABLE_APP_LIST) && defined(OS_CHROMEOS)
-  std::string google_now_extension_id;
-  if (GetGoogleNowExtensionId(&google_now_extension_id)) {
-    prefs_->SetString(google_now_extension_id + ".external_update_url",
-                      extension_urls::GetWebstoreUpdateUrl().spec());
-  }
-#endif
 
   LoadFinished();
 }



--- ./chrome/browser/extensions/component_loader.cc
+++ ./chrome/browser/extensions/component_loader.cc.new
@@ -327,24 +327,12 @@
 }
 
 void ComponentLoader::AddHangoutServicesExtension() {
-#if defined(GOOGLE_CHROME_BUILD) || defined(ENABLE_HANGOUT_SERVICES_EXTENSION)
-  Add(IDR_HANGOUT_SERVICES_MANIFEST,
-      base::FilePath(FILE_PATH_LITERAL("hangout_services")));
-#endif
 }
 
 void ComponentLoader::AddHotwordAudioVerificationApp() {
-  if (HotwordServiceFactory::IsAlwaysOnAvailable()) {
-    Add(IDR_HOTWORD_AUDIO_VERIFICATION_MANIFEST,
-        base::FilePath(FILE_PATH_LITERAL("hotword_audio_verification")));
-  }
 }
 
 void ComponentLoader::AddHotwordHelperExtension() {
-  if (HotwordServiceFactory::IsHotwordAllowed(browser_context_)) {
-    Add(IDR_HOTWORD_MANIFEST,
-        base::FilePath(FILE_PATH_LITERAL("hotword")));
-  }
 }
 
 void ComponentLoader::AddImageLoaderExtension() {
@@ -355,8 +343,6 @@
 }
 
 void ComponentLoader::AddNetworkSpeechSynthesisExtension() {
-  Add(IDR_NETWORK_SPEECH_SYNTHESIS_MANIFEST,
-      base::FilePath(FILE_PATH_LITERAL("network_speech_synthesis")));
 }
 
 #if defined(OS_CHROMEOS)
@@ -442,15 +428,6 @@
 }
 
 void ComponentLoader::AddWebStoreApp() {
-#if defined(OS_CHROMEOS)
-  if (!IsNormalSession())
-    return;
-#endif
-
-  AddWithNameAndDescription(IDR_WEBSTORE_MANIFEST,
-                            base::FilePath(FILE_PATH_LITERAL("web_store")),
-                            IDS_WEBSTORE_NAME_STORE,
-                            IDS_WEBSTORE_APP_DESCRIPTION);
 }
 
 // static
@@ -488,9 +465,6 @@
   DCHECK(!skip_session_components);
   Add(IDR_BOOKMARKS_MANIFEST,
       base::FilePath(FILE_PATH_LITERAL("bookmark_manager")));
-  // Cloud Print component app. Not required on Chrome OS.
-  Add(IDR_CLOUDPRINT_MANIFEST,
-      base::FilePath(FILE_PATH_LITERAL("cloud_print")));
 #endif
 
   if (!skip_session_components) {
@@ -550,13 +524,6 @@
     AddHotwordHelperExtension();
     AddImageLoaderExtension();
 
-    bool install_feedback = enable_background_extensions_during_testing;
-#if defined(GOOGLE_CHROME_BUILD)
-    install_feedback = true;
-#endif  // defined(GOOGLE_CHROME_BUILD)
-    if (install_feedback)
-      Add(IDR_FEEDBACK_MANIFEST, base::FilePath(FILE_PATH_LITERAL("feedback")));
-
 #if defined(ENABLE_SETTINGS_APP)
     Add(IDR_SETTINGS_APP_MANIFEST,
         base::FilePath(FILE_PATH_LITERAL("settings_app")));
@@ -601,36 +568,6 @@
   }
 #endif  // defined(OS_CHROMEOS)
 
-#if defined(ENABLE_GOOGLE_NOW)
-  const char kEnablePrefix[] = "Enable";
-  const char kFieldTrialName[] = "GoogleNow";
-  std::string enable_prefix(kEnablePrefix);
-  std::string field_trial_result =
-      base::FieldTrialList::FindFullName(kFieldTrialName);
-
-  bool enabled_via_field_trial =
-      field_trial_result.compare(0, enable_prefix.length(), enable_prefix) == 0;
-
-  // Enable the feature on trybots and trunk builds.
-  bool enabled_via_trunk_build =
-      chrome::VersionInfo::GetChannel() == chrome::VersionInfo::CHANNEL_UNKNOWN;
-
-  bool enabled = enabled_via_field_trial || enabled_via_trunk_build;
-
-#if defined(ENABLE_APP_LIST) && defined(OS_CHROMEOS)
-  // Don't load if newer trial is running (== new extension id is available).
-  std::string ignored_extension_id;
-  if (GetGoogleNowExtensionId(&ignored_extension_id)) {
-    enabled = false;
-  }
-#endif
-
-  if (!skip_session_components && enabled) {
-    Add(IDR_GOOGLE_NOW_MANIFEST,
-        base::FilePath(FILE_PATH_LITERAL("google_now")));
-  }
-#endif
-
 #if defined(GOOGLE_CHROME_BUILD)
 #if !defined(OS_CHROMEOS)  // http://crbug.com/314799
   AddNetworkSpeechSynthesisExtension();

