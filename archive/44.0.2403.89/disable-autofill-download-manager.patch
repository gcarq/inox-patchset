--- ./components/autofill/core/browser/autofill_download_manager.cc	2015-05-14 00:35:46.000000000 +0200
+++ ./components/autofill/core/browser/autofill_download_manager.cc.new	2015-07-23 03:58:13.640789314 +0200
@@ -44,11 +44,6 @@
   return std::string();
 }
 
-GURL GetRequestUrl(AutofillDownloadManager::RequestType request_type) {
-  return GURL("https://clients1.google.com/tbproxy/af/" +
-              RequestTypeToString(request_type) + "?client=" + kClientName);
-}
-
 }  // namespace
 
 struct AutofillDownloadManager::FormRequestData {
@@ -170,28 +165,6 @@
 bool AutofillDownloadManager::StartRequest(
     const std::string& form_xml,
     const FormRequestData& request_data) {
-  net::URLRequestContextGetter* request_context =
-      driver_->GetURLRequestContext();
-  DCHECK(request_context);
-  GURL request_url = GetRequestUrl(request_data.request_type);
-
-  // Id is ignored for regular chrome, in unit test id's for fake fetcher
-  // factory will be 0, 1, 2, ...
-  net::URLFetcher* fetcher =
-      net::URLFetcher::Create(fetcher_id_for_unittest_++, request_url,
-                              net::URLFetcher::POST, this).release();
-  url_fetchers_[fetcher] = request_data;
-  fetcher->SetAutomaticallyRetryOn5xx(false);
-  fetcher->SetRequestContext(request_context);
-  fetcher->SetUploadData("text/plain", form_xml);
-  fetcher->SetLoadFlags(net::LOAD_DO_NOT_SAVE_COOKIES |
-                        net::LOAD_DO_NOT_SEND_COOKIES);
-  fetcher->Start();
-
-  VLOG(1) << "Sending AutofillDownloadManager "
-           << RequestTypeToString(request_data.request_type)
-           << " request: " << form_xml;
-
   return true;
 }

