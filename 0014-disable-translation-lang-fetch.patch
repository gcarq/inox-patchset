--- a/components/translate/core/browser/translate_language_list.cc
+++ b/components/translate/core/browser/translate_language_list.cc
@@ -216,6 +216,8 @@ GURL TranslateLanguageList::TranslateLan
 }
 
 void TranslateLanguageList::RequestLanguageList() {
+  return;
+
   // If resource requests are not allowed, we'll get a callback when they are.
   if (!resource_requests_allowed_) {
     request_pending_ = true;
--- a/chrome/browser/spellchecker/spellcheck_hunspell_dictionary.cc
+++ b/chrome/browser/spellchecker/spellcheck_hunspell_dictionary.cc
@@ -152,7 +152,6 @@ void SpellcheckHunspellDictionary::Retry
     return;
   }
   request_context_getter_ = request_context_getter;
-  DownloadDictionary(GetDictionaryURL());
 }
 
 bool SpellcheckHunspellDictionary::IsReady() const {
@@ -345,9 +344,6 @@ void SpellcheckHunspellDictionary::Initi
     }
 
     if (request_context_getter_) {
-      // Download from the UI thread to check that |request_context_getter_| is
-      // still valid.
-      DownloadDictionary(GetDictionaryURL());
       return;
     }
   }
--- a/components/translate/core/browser/translate_ranker_impl.cc
+++ b/components/translate/core/browser/translate_ranker_impl.cc
@@ -134,11 +134,9 @@ TranslateRankerImpl::TranslateRankerImpl
                                          ukm::UkmRecorder* ukm_recorder)
     : ukm_recorder_(ukm_recorder),
       is_logging_enabled_(true),
-      is_query_enabled_(base::FeatureList::IsEnabled(kTranslateRankerQuery)),
-      is_enforcement_enabled_(
-          base::FeatureList::IsEnabled(kTranslateRankerEnforcement)),
-      is_decision_override_enabled_(base::FeatureList::IsEnabled(
-          translate::kTranslateRankerDecisionOverride)),
+      is_query_enabled_(false),
+      is_enforcement_enabled_(false),
+      is_decision_override_enabled_(false),
       weak_ptr_factory_(this) {
   if (is_query_enabled_ || is_enforcement_enabled_ ||
       is_decision_override_enabled_) {
@@ -201,6 +199,8 @@ bool TranslateRankerImpl::ShouldOfferTra
   // (or become False).
   const bool kDefaultResponse = true;
 
+  return kDefaultResponse;
+
   translate_event->set_ranker_request_timestamp_sec(
       (base::TimeTicks::Now() - base::TimeTicks()).InSeconds());
   translate_event->set_ranker_version(GetModelVersion());
